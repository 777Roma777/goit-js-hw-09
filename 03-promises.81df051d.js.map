{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAkC3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CbR,EAAKgB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAeC,OAAOjB,EAAWkB,OACjCC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAC5BG,EAAW,EAEf,GAAIL,EAAe,GAAKG,EAAO,GAAKC,GAAU,EAErB,YADvBE,EAAA3B,GAAS4B,OAAOC,QAAQ,gCAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAC3BJ,EAAWI,EACXtB,EAAcsB,EAAGT,EAAeG,EAAOM,GACpCC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA3B,GAAS4B,OAAOI,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA3B,GAAS4B,OAAOC,QACd,sBAAoBpB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  let initialDelay = Number(delayInput.value);\n  let step = Number(stepInput.value);\n  let amount = Number(amountInput.value);\n  let position = 0;\n\n  if (initialDelay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.failure('Значення мають бути більше 0');\n    return; // Додайте цей рядок, щоб зупинити виконання коду при помилці\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    position = i;\n    createPromise(i, initialDelay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  // form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","initialDelay","Number","value","step","amount","position1","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.81df051d.js.map"}